{
  "next_post_id": 5,
  "posts": [
    {
      "id": 1,
      "platform": "x",
      "content": "Writing a draft for my smart flow systems,",
      "status": "failed",
      "scheduled_time": "2025-08-16T14:08:40.588020+00:00",
      "external_id": null,
      "error": "missing_access_token",
      "created_at": "2025-08-16T14:08:30.588056+00:00",
      "updated_at": "2025-08-16T14:08:43.734945+00:00"
    },
    {
      "id": 2,
      "platform": "x",
      "content": "Ai tips for creating — concise take #3. Action: reply with your biggest blocker.",
      "status": "failed",
      "scheduled_time": "2025-08-16T14:09:30.408728+00:00",
      "external_id": null,
      "error": "missing_access_token",
      "created_at": "2025-08-16T14:09:20.408753+00:00",
      "updated_at": "2025-08-16T14:09:33.738318+00:00"
    },
    {
      "id": 3,
      "platform": "x",
      "content": "Puritanical costumes — helpful take #3. Action: reply with your biggest blocker.\n\n#action #biggest #blocker #costumes #helpful",
      "status": "published",
      "scheduled_time": "2025-08-16T15:55:31.255315+00:00",
      "external_id": "x_6755873",
      "error": null,
      "created_at": "2025-08-16T15:55:21.255342+00:00",
      "updated_at": "2025-08-16T15:55:36.064244+00:00"
    },
    {
      "id": 4,
      "platform": "x",
      "content": "Real DB (SQLite via SQLAlchemy) instead of the in-memory USERS dict\n\t•\t✅ Stripe webhook → persist plan to DB\n\t•\t✅ Onboarding messages (email + SMS) templates + quick send helpers\n\t•\t✅ Minimal auth placeholder so we can map Stripe customer → user",
      "status": "published",
      "scheduled_time": "2025-08-16T18:31:34.536298+00:00",
      "external_id": "x_2358200",
      "error": null,
      "created_at": "2025-08-16T18:31:24.536342+00:00",
      "updated_at": "2025-08-16T18:31:36.435822+00:00"
    }
  ],
  "accounts": {
    "x": {
      "access_token": "test123",
      "refresh_token": null
    }
  },
  "next_feedback_id": 1,
  "feedback": []
}